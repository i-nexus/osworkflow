plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
}

try {
    apply from: 'local.gradle'
} catch (e) {
    // You don't have to have a local.gradle file
}
apply plugin: 'maven-publish'

group = 'com.i-nexus.opensymphony'
version = project.hasProperty('app_version') ? app_version : 'local'

description = "bare minimum OpenSymphony Workflow based on 3.0 code base"

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
    maven {
        url rootProject.ext.releaseRepo
    }
}
dependencies {

    compile group: 'bsf', name: 'bsf', version: '2.4.0'
    compile group: 'bsh', name: 'bsh', version: '1.3.0'

    // opensymphony
    compile group: 'opensymphony', name: 'oscore', version: '2.2.4'
    compile group: 'opensymphony', name: 'propertyset', version: '1.5'

    // spring
    compile group: 'org.springframework', name: 'spring-context', version: '4.0.9.RELEASE'

    compile group: 'org.hibernate', name: 'hibernate-core', version: '4.3.11.Final'
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            version version
            artifactId rootProject.name
            groupId group

            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
    repositories {
        maven {
            url rootProject.ext.releaseRepo
            credentials {
                username rootProject.ext.releaseRepoUserName
                password rootProject.ext.releaseRepoPassword
            }
        }
    }
}

javadoc {
    failOnError = false
}
